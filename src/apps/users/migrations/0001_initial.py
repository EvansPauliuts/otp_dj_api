# Generated by Django 5.0.2 on 2024-02-29 07:49

import uuid

import django.db.models.deletion
from django.conf import settings
from django.db import migrations
from django.db import models

import apps.users.utils


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="FileModel",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("file", models.FileField(upload_to="file/")),
            ],
        ),
        migrations.CreateModel(
            name="ImageModel",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("file", models.ImageField(upload_to="img/")),
            ],
        ),
        migrations.CreateModel(
            name="PendingUser",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True, db_index=True)),
                (
                    "updated",
                    models.DateTimeField(auto_now=True, db_index=True, null=True),
                ),
                (
                    "phone",
                    models.CharField(
                        max_length=19, validators=[apps.users.utils.PhoneValidator()]
                    ),
                ),
                (
                    "verification_code",
                    models.CharField(blank=True, max_length=8, null=True),
                ),
                ("password", models.CharField(max_length=255, null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all "
                        "permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, null=True, unique=True
                    ),
                ),
                ("password", models.CharField(max_length=255, null=True)),
                ("username", models.CharField(max_length=255, unique=True)),
                ("firstname", models.CharField(blank=True, max_length=255, null=True)),
                ("lastname", models.CharField(blank=True, max_length=255, null=True)),
                ("image", models.FileField(blank=True, null=True, upload_to="users/")),
                (
                    "phone",
                    models.CharField(blank=True, max_length=30, null=True, unique=True),
                ),
                ("is_locked", models.BooleanField(default=False)),
                ("is_staff", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=False)),
                ("is_admin", models.BooleanField(default=False)),
                ("last_login", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("verified", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user"
                        " will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "ordering": ("-created_at",),
            },
        ),
        migrations.CreateModel(
            name="Token",
            fields=[
                ("created", models.DateTimeField(auto_now_add=True, db_index=True)),
                (
                    "updated",
                    models.DateTimeField(auto_now=True, db_index=True, null=True),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("token", models.CharField(max_length=8)),
                (
                    "token_type",
                    models.CharField(
                        choices=[("PASSWORD_RESET", "PASSWORD_RESET")], max_length=100
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
