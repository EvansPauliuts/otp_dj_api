# Generated by Django 5.0.2 on 2024-03-12 10:39

import colorfield.fields
import core.models
import core.utils.helpers
import django.db.models.deletion
import django.db.models.functions.text
import localflavor.us.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("accounts", "0002_alter_user_session_key"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="States",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True, db_index=True)),
                (
                    "updated",
                    models.DateTimeField(auto_now=True, db_index=True, null=True),
                ),
                ("name", models.CharField(max_length=255)),
                ("abbreviation", models.CharField(max_length=5)),
                ("country_name", models.CharField(max_length=255)),
                ("country_iso3", models.CharField(max_length=3)),
            ],
            options={
                "db_table": "states",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="CommentType",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True, db_index=True)),
                (
                    "updated",
                    models.DateTimeField(auto_now=True, db_index=True, null=True),
                ),
                (
                    "status",
                    core.models.ChoiceField(
                        choices=[("A", "Active"), ("I", "Inactive")],
                        default="A",
                        max_length=1,
                    ),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[("H", "High"), ("M", "Medium"), ("L", "Low")],
                        default="L",
                        max_length=50,
                    ),
                ),
                ("name", models.CharField(max_length=10)),
                ("description", models.TextField()),
                (
                    "business_unit",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        related_query_name="%(class)s",
                        to="accounts.businessunit",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        related_query_name="%(class)s",
                        to="accounts.organization",
                    ),
                ),
            ],
            options={
                "db_table": "comment_type",
                "db_table_comment": "Stores different types of comments.",
                "ordering": ("organization",),
            },
        ),
        migrations.CreateModel(
            name="LocationCategory",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True, db_index=True)),
                (
                    "updated",
                    models.DateTimeField(auto_now=True, db_index=True, null=True),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
                (
                    "color",
                    colorfield.fields.ColorField(
                        blank=True,
                        default=None,
                        image_field=None,
                        max_length=25,
                        null=True,
                        samples=None,
                    ),
                ),
                (
                    "business_unit",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        related_query_name="%(class)s",
                        to="accounts.businessunit",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        related_query_name="%(class)s",
                        to="accounts.organization",
                    ),
                ),
            ],
            options={
                "db_table": "location_category",
                "db_table_comment": "Stores location category information.",
            },
        ),
        migrations.CreateModel(
            name="Location",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True, db_index=True)),
                (
                    "updated",
                    models.DateTimeField(auto_now=True, db_index=True, null=True),
                ),
                (
                    "status",
                    core.models.ChoiceField(
                        choices=[("A", "Active"), ("I", "Inactive")],
                        default="A",
                        max_length=1,
                    ),
                ),
                ("code", models.CharField(max_length=10)),
                ("name", models.CharField(db_index=True, max_length=255)),
                ("description", models.TextField(blank=True)),
                ("address_line_1", models.CharField(blank=True, max_length=255)),
                ("address_line_2", models.CharField(blank=True, max_length=255)),
                ("city", models.CharField(max_length=255)),
                ("state", models.CharField(max_length=5)),
                ("zip_code", localflavor.us.models.USZipCodeField(max_length=10)),
                ("longitude", models.FloatField(blank=True, null=True)),
                ("latitude", models.FloatField(blank=True, null=True)),
                ("place_id", models.CharField(blank=True, max_length=255)),
                ("is_geocoded", models.BooleanField(default=False)),
                (
                    "business_unit",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        related_query_name="%(class)s",
                        to="accounts.businessunit",
                    ),
                ),
                (
                    "depot",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="location",
                        related_query_name="locations",
                        to="accounts.depot",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        related_query_name="%(class)s",
                        to="accounts.organization",
                    ),
                ),
                (
                    "location_category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="location",
                        related_query_name="locations",
                        to="location.locationcategory",
                    ),
                ),
            ],
            options={
                "db_table": "location",
                "db_table_comment": "Stores location information for a related organization.",
            },
        ),
        migrations.CreateModel(
            name="LocationComment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True, db_index=True)),
                (
                    "updated",
                    models.DateTimeField(auto_now=True, db_index=True, null=True),
                ),
                ("comment", models.TextField()),
                (
                    "business_unit",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        related_query_name="%(class)s",
                        to="accounts.businessunit",
                    ),
                ),
                (
                    "comment_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="location_comments",
                        related_query_name="location_comment",
                        to="location.commenttype",
                    ),
                ),
                (
                    "entered_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="location_comments",
                        related_query_name="location_comment",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="location_comments",
                        related_query_name="location_comment",
                        to="location.location",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        related_query_name="%(class)s",
                        to="accounts.organization",
                    ),
                ),
            ],
            options={
                "db_table": "location_comment",
                "ordering": ("location",),
            },
        ),
        migrations.CreateModel(
            name="LocationContact",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True, db_index=True)),
                (
                    "updated",
                    models.DateTimeField(auto_now=True, db_index=True, null=True),
                ),
                ("name", models.CharField(db_index=True, max_length=255)),
                ("email", models.EmailField(blank=True, max_length=255)),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        max_length=15,
                        validators=[core.utils.helpers.PhoneValidator()],
                    ),
                ),
                (
                    "business_unit",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        related_query_name="%(class)s",
                        to="accounts.businessunit",
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="location_contacts",
                        related_query_name="location_contact",
                        to="location.location",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        related_query_name="%(class)s",
                        to="accounts.organization",
                    ),
                ),
            ],
            options={
                "db_table": "location_contact",
                "db_table_comment": "Stores location contact information related to location.",
            },
        ),
        migrations.AddConstraint(
            model_name="states",
            constraint=models.UniqueConstraint(
                django.db.models.functions.text.Lower("name"),
                models.F("abbreviation"),
                name="unique_name_abbreviation_state",
            ),
        ),
        migrations.AddConstraint(
            model_name="commenttype",
            constraint=models.UniqueConstraint(
                django.db.models.functions.text.Lower("name"),
                models.F("organization"),
                name="unique_comment_type_name_organization",
            ),
        ),
        migrations.AddConstraint(
            model_name="locationcategory",
            constraint=models.UniqueConstraint(
                django.db.models.functions.text.Lower("name"),
                models.F("organization"),
                name="unique_location_category_name",
            ),
        ),
        migrations.AddConstraint(
            model_name="location",
            constraint=models.UniqueConstraint(
                django.db.models.functions.text.Lower("code"),
                models.F("organization"),
                name="unique_location_code_organization",
            ),
        ),
    ]
